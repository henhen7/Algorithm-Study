# 입력: 첫째 줄에 공간의 크기를 나타내는 N이 주어진다. (1<=N<=100)
#      둘째 줄에 여행가 A가 이동할 계획서 내용이 주어진다. (1<=i<=100)
# 출력: A가 최종적으로 도달할 지점의 좌표 (X, Y)를 공백으로 구분하여 출력한다.

# 초기 좌표 설정
n = int(input())
x, y = 1, 1
m = input().split()

# L, R, U, D에 따른 이동 방향(x좌표: 행, y좌표: 열)
move = ['L', 'R', 'U', 'D']
dx = [0, 0, -1, 1]
dy = [-1, 1, 0, 0]

# 이동 연산
for i in m: #i부터 입력된 이동을 순차적으로 진행
    for j in range(len(move)):
        #range: 함수로 입력받은 숫자에 해당하는 범위의 값을 반복 가능한 객체로 만들어 리턴해줌
        #len(move): 4이므로, 0, 1, 2, 3을 반복
        if i == move[j]: #입력된 이동이 move의 j번째 배열과 일치한다면 아래 연산을 수행
            nx = x + dx[j] #dx[3]이라면, U에 해당
            ny = y + dy[j]
    if nx < 1 or ny < 1 or nx > n or ny > n: #지도를 벗어나는 이동은 다음 동작을 수행하지 않고 다시 올라가서 반복 수행
        continue
    x, y = nx, ny
print(x, y)